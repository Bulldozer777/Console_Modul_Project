Ограничения универсальных типов
С помощью универсальных параметров мы можем типизировать обобщенные классы любым типом. Однако иногда возникает необходимость конкретизировать тип. 
В качестве ограничений мы можем использовать следующие типы:

1 Классы

2 Интерфейсы

3 class - универсальный параметр должен представлять класс

4 struct - универсальный параметр должен представлять структуру

5 new() - универсальный параметр должен представлять тип, который имеет общедоступный (public) конструктор без параметров

Стандартные ограничения
Есть ряд стандартных ограничений, которые мы можем использовать. В частности, можно указать ограничение, чтобы использовались только структуры или другие типы значений:

class Account<T> where T : struct
{}
При этом использовать в качестве ограничения конкретные структуры в отличие от классов нельзя.

Также можно задать в качестве ограничения ссылочные типы:

class Transaction<T> where T : class
{}
А также можно задать с помощью слова new в качестве ограничения класс или структуру, которые имеют общедоступный конструктор без параметров:

class Transaction<T> where T : new()
{}
Если для универсального параметра задано несколько ограничений, то они должны идти в определенном порядке:

1 Название класса, class, struct. Причем мы можем одновременно определить только одно из этих ограничений

2 Название интерфейса

3 new()