   abstract class Z_I_35_Person
        {
            public string FirstName { get; set; }
            public string LastName { get; set; }
            public Z_I_35_Person(string name, string surname)
            {
                FirstName = name;
                LastName = surname;
            }
            public abstract void Display();
        }
        class Z_I_35_Employee : Z_I_35_Person
        {
            public string Company { get; set; }
            public Z_I_35_Employee(string name, string surname, string comp)
                 : base(name, surname)
            {
                Company = comp;
            }
            public override void Display()
            {
                Console.WriteLine($"Employee {FirstName} {LastName} работает в компании {Company}");
            }
        }
        class Z_I_35_Client : Z_I_35_Person
        {
            public int Sum { get; set; }
            public string Bank { get; set; }
            public Z_I_35_Client(string name, string surname, string bank, int sum)
                : base(name, surname)
            {
                Bank = bank;
                Sum = sum;
            }
            public override void Display()
            {
                Console.WriteLine($"Client {FirstName} {LastName} имеет счет в банке {Bank} на сумму {Sum}");
            }
        }

            object person3 = new Z_I_35_Employee("Tom", "Smith", "Microsoft"); //преобразование от производного класса к базовому
            Z_I_35_Person person1 = new Z_I_35_Employee("Tom", "Smith", "Microsoft"); //преобразование от производного класса к базовому
            Z_I_35_Person person2 = new Z_I_35_Client("Bob", "Tompson", "SomeBank", 5000);
            int sum = ((Z_I_35_Client)person2).Sum;
            string name = ((Z_I_35_Employee)person1).FirstName;
            string company = ((Z_I_35_Employee)person1).Company;
            Console.WriteLine(sum);
            Console.WriteLine(name);
            Console.WriteLine(company);